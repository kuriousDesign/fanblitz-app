TODO:
[t] server actions get getPicksWithGamesByPlayerId and getPicksByPlayerIdAndGameStatus
[ ] server component PlayerPicks (use getPicksByPlayerIdAndGameStatus of multiple game_status to build an array) or use the button filter approach shadcn 'tabs'
[ ] dashboard showing games and your active picks (based on game) and former picks
[ ] Pick Form - multi-step process with payment at end
[ ] Payment Validation Form (admin)
[ ] investigate alternatives to Zapier --> Google Workspace automations for example
[ ] admin screen for modifying payments
[ ] create classic draw name from hat game
[ ] incorporate tie breaker type into game
[ ] user gaining access to private games (like a join game for ncaa tourney)
[ ] handle converting getPlayer and other server actions to convert private_games id's back and forth from string to ObjectId
[ ] create player in middleware

[ ] nav bar at top
[ ] See how many users can register before clerk will bitch about me not paying --> then bang head on desk very hard
[ ] Clerk production/deployment steps (very involved and requires custom domain)

IDEAS FOR ANIMATION:
- screen brightness sweeps from bottom to top (like when i plug in pixel 6a into charger)
- press and hold to submit pick, charging animation like soda machine at boston amazon
- rim of card in looping until you fill out all the info on that card
- submit can involve dragging a piece of paper out of a hat

NOT DOING:
[ ] integrate grok for creating/suggesting fun pick nicknames --> not free so not doing

COMPLETED:
[x] Debug CreateGameForm submission
[x] Event Form
[x] Game Form
[x] Driver Form
[x] Racer Form
[x] improve schema and model creation: ref: https://amcereijo.medium.com/mongoose-objectid-the-small-detail-i-didnt-know-09130a64b6b0
[x] develop protected routes/components/functions - logged in/out, admin protected, user-specifc protected, dynamic based on game status (for viewing other users picks)
[x] Zapier Venmo postPayment automation
[x] Venmo button to produce deep link --> facilitate proper venmo payment for user (who to pay, how much and the note with pick_id)
[x] Clerk integration
[x] MongoDb Cloud integration

Notes:
- Use [ ] for pending tasks
- Use [x] for completed tasks
- Add dates when relevant (YYYY-MM-DD)
- Add assignee if working in team (@username)